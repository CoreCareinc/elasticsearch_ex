name: Continuous Integration

on:
  push:
    branches:
      - "*"
    paths-ignore:
      - "*.md"
    tags-ignore:
      - "*"
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  ELIXIR_VERSION: 1.15.7
  ERLANG_VERSION: 26.2.1

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Erlang and Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.ERLANG_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          install-hex: true
          install-rebar: true

      - name: Restore formatting environment
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-format
          path: |
            deps/
            _build/dev/

      - name: Fetch the dependencies
        run: mix deps.get

      - name: Format code
        run: mix format --check-formatted

  credo:
    name: Run Credo
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Erlang and Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.ERLANG_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          install-hex: true
          install-rebar: true

      - name: Restore Credo environment
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-credo
          path: |
            deps/
            _build/dev/

      - name: Fetch the dependencies
        run: mix deps.get

      - name: Run credo
        run: mix credo --format sarif

  dialyxir:
    name: Run Dialyxir
    runs-on: ubuntu-22.04
    timeout-minutes: 20

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Erlang and Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.ERLANG_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          install-hex: true
          install-rebar: true

      - name: Restore Dialyzer environment
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-dialyxir
          path: |
            deps/
            _build/dev/

      - name: Fetch the dependencies
        run: mix deps.get

      - name: Run dialyzer
        run: mix dialyzer --format github

  test:
    name: Run tests
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        elixir: ["1.16.0-rc.1", "1.15.7", "1.14.5", "1.13.4"]
        elasticsearch: ["8.11.3", "7.17.16"]
        include:
          - elixir: "1.16.0-rc.1"
            erlang: "26.2.1"
          - elixir: "1.16.0-rc.1"
            erlang: "25.3.2.8"
          - elixir: "1.16.0-rc.1"
            erlang: "24.3.4.15"
          - elixir: "1.15.7"
            erlang: "26.2.1"
          - elixir: "1.15.7"
            erlang: "25.3.2.8"
          - elixir: "1.15.7"
            erlang: "24.3.4.15"
          - elixir: "1.14.5"
            erlang: "26.2.1"
          - elixir: "1.14.5"
            erlang: "25.3.2.8"
          - elixir: "1.14.5"
            erlang: "24.3.4.15"
          - elixir: "1.13.4"
            erlang: "25.3.2.8"
          - elixir: "1.13.4"
            erlang: "24.3.4.15"

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${{ matrix.elasticsearch }}
        ports: ["9200:9200"]
        env:
          discovery.type: "single-node"
          ELASTIC_PASSWORD: "elastic"
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Erlang and Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.erlang }}
          elixir-version: ${{ matrix.elixir }}
          install-hex: true
          install-rebar: true

      - name: Restore formatting environment
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-elasticsearch-${{ matrix.elasticsearch }}-test
          path: |
            deps/
            _build/test/

      - name: Fetch the dependencies
        run: mix deps.get

      - name: Run tests
        run: mix test
